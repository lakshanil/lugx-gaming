steps:
  # Step 1: Build Docker image from frontend directory
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'build',
        '--no-cache', 
        '-t', 'gcr.io/$PROJECT_ID/frontend:$SHORT_SHA',
        '-f', 'frontend/Dockerfile',
        'frontend'
      ]

  # Step 2: Push Docker image to Google Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      ['push', 'gcr.io/$PROJECT_ID/frontend:$SHORT_SHA']

  # Step 3: Debugging step - List files in frontend/ to confirm file is present
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: bash
    args:
      - -c
      - |
        echo "📁 Listing files in frontend/ directory:"
        ls -al frontend
        echo "✅ Done listing files"

  # Step 4: Replace IMAGE_PLACEHOLDER with actual image path in deployment YAML
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: bash
    args:
      - -c
      - |
        sed "s|IMAGE_PLACEHOLDER|gcr.io/$PROJECT_ID/frontend:$SHORT_SHA|g" frontend-deployment.yaml > k8s-frontend-deployment.yaml

  # Step 5: Apply the deployment YAML to the Kubernetes cluster
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'frontend/k8s-frontend-deployment.yaml']
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
      - 'CLOUDSDK_CONTAINER_CLUSTER=lugx-cluster'

  # Step 6: Apply the service definition to the cluster
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'frontend/frontend-service.yaml']
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
      - 'CLOUDSDK_CONTAINER_CLUSTER=lugx-cluster'

images:
  - 'gcr.io/$PROJECT_ID/frontend:$SHORT_SHA'

options:
  logging: CLOUD_LOGGING_ONLY

serviceAccount: 'cloudbuild-deployer@lugx-gaming-project.iam.gserviceaccount.com'
